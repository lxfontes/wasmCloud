// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package query represents the imported interface "wasmcloud:postgres/query@0.1.1-draft".
//
// Interface for querying a Postgres database
package query

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
	"github.com/wasmcloud/wasmcloud/examples/golang/components/sqldb-postgres-query/gen/wasmcloud/postgres/types"
)

// Query represents the imported function "query".
//
// Query a Postgres database, leaving connection/session management
// to the callee/implementer of this interface (normally a provider configured with
// connection credentials)
//
// Queries *must* be parameterized, with named arguments in the form of `$<integer>`,
// for example:
//
//	SELECT email,username FROM users WHERE uuid=$1;
//
//	query: func(query: string, params: list<pg-value>) -> result<list<result-row>,
//	query-error>
//
//go:nosplit
func Query(query string, params cm.List[types.PgValue]) (result cm.Result[QueryErrorShape, cm.List[types.ResultRow], types.QueryError]) {
	query0, query1 := cm.LowerString(query)
	params0, params1 := cm.LowerList(params)
	wasmimport_Query((*uint8)(query0), (uint32)(query1), (*types.PgValue)(params0), (uint32)(params1), &result)
	return
}

//go:wasmimport wasmcloud:postgres/query@0.1.1-draft query
//go:noescape
func wasmimport_Query(query0 *uint8, query1 uint32, params0 *types.PgValue, params1 uint32, result *cm.Result[QueryErrorShape, cm.List[types.ResultRow], types.QueryError])

// QueryBatch represents the imported function "query-batch".
//
// Perform a batch query (which could contain multiple statements) against a Postgres
// database,
// leaving connection/session management to the callee/implementer of this interface
// (normally a provider configured with connection credentials)
//
// No user-provided or untrusted data should be used with this query -- parameters
// are not allowed
//
// This query *can* be used to execute multi-statement queries (common in migrations).
//
//	query-batch: func(query: string) -> result<_, query-error>
//
//go:nosplit
func QueryBatch(query string) (result cm.Result[types.QueryError, struct{}, types.QueryError]) {
	query0, query1 := cm.LowerString(query)
	wasmimport_QueryBatch((*uint8)(query0), (uint32)(query1), &result)
	return
}

//go:wasmimport wasmcloud:postgres/query@0.1.1-draft query-batch
//go:noescape
func wasmimport_QueryBatch(query0 *uint8, query1 uint32, result *cm.Result[types.QueryError, struct{}, types.QueryError])
